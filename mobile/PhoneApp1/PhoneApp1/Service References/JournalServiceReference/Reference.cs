//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace PhoneApp1.JournalServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Journal", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    public partial class Journal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int cropidField;
        
        private System.DateTime dateenteredField;
        
        private string descriptionField;
        
        private int journalidField;
        
        private byte[] journalimageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cropid {
            get {
                return this.cropidField;
            }
            set {
                if ((this.cropidField.Equals(value) != true)) {
                    this.cropidField = value;
                    this.RaisePropertyChanged("cropid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateentered {
            get {
                return this.dateenteredField;
            }
            set {
                if ((this.dateenteredField.Equals(value) != true)) {
                    this.dateenteredField = value;
                    this.RaisePropertyChanged("dateentered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int journalid {
            get {
                return this.journalidField;
            }
            set {
                if ((this.journalidField.Equals(value) != true)) {
                    this.journalidField = value;
                    this.RaisePropertyChanged("journalid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] journalimage {
            get {
                return this.journalimageField;
            }
            set {
                if ((object.ReferenceEquals(this.journalimageField, value) != true)) {
                    this.journalimageField = value;
                    this.RaisePropertyChanged("journalimage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JournalServiceReference.IJournalService")]
    public interface IJournalService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournalService/InsertJournal", ReplyAction="http://tempuri.org/IJournalService/InsertJournalResponse")]
        System.IAsyncResult BeginInsertJournal(PhoneApp1.JournalServiceReference.Journal journal, System.AsyncCallback callback, object asyncState);
        
        int EndInsertJournal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IJournalService/SelectJournalByCropId", ReplyAction="http://tempuri.org/IJournalService/SelectJournalByCropIdResponse")]
        System.IAsyncResult BeginSelectJournalByCropId(int crop_id, System.AsyncCallback callback, object asyncState);
        
        PhoneApp1.JournalServiceReference.Journal EndSelectJournalByCropId(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJournalServiceChannel : PhoneApp1.JournalServiceReference.IJournalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertJournalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertJournalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectJournalByCropIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectJournalByCropIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp1.JournalServiceReference.Journal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp1.JournalServiceReference.Journal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JournalServiceClient : System.ServiceModel.ClientBase<PhoneApp1.JournalServiceReference.IJournalService>, PhoneApp1.JournalServiceReference.IJournalService {
        
        private BeginOperationDelegate onBeginInsertJournalDelegate;
        
        private EndOperationDelegate onEndInsertJournalDelegate;
        
        private System.Threading.SendOrPostCallback onInsertJournalCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectJournalByCropIdDelegate;
        
        private EndOperationDelegate onEndSelectJournalByCropIdDelegate;
        
        private System.Threading.SendOrPostCallback onSelectJournalByCropIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public JournalServiceClient() {
        }
        
        public JournalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JournalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JournalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<InsertJournalCompletedEventArgs> InsertJournalCompleted;
        
        public event System.EventHandler<SelectJournalByCropIdCompletedEventArgs> SelectJournalByCropIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp1.JournalServiceReference.IJournalService.BeginInsertJournal(PhoneApp1.JournalServiceReference.Journal journal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertJournal(journal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PhoneApp1.JournalServiceReference.IJournalService.EndInsertJournal(System.IAsyncResult result) {
            return base.Channel.EndInsertJournal(result);
        }
        
        private System.IAsyncResult OnBeginInsertJournal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp1.JournalServiceReference.Journal journal = ((PhoneApp1.JournalServiceReference.Journal)(inValues[0]));
            return ((PhoneApp1.JournalServiceReference.IJournalService)(this)).BeginInsertJournal(journal, callback, asyncState);
        }
        
        private object[] OnEndInsertJournal(System.IAsyncResult result) {
            int retVal = ((PhoneApp1.JournalServiceReference.IJournalService)(this)).EndInsertJournal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertJournalCompleted(object state) {
            if ((this.InsertJournalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertJournalCompleted(this, new InsertJournalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertJournalAsync(PhoneApp1.JournalServiceReference.Journal journal) {
            this.InsertJournalAsync(journal, null);
        }
        
        public void InsertJournalAsync(PhoneApp1.JournalServiceReference.Journal journal, object userState) {
            if ((this.onBeginInsertJournalDelegate == null)) {
                this.onBeginInsertJournalDelegate = new BeginOperationDelegate(this.OnBeginInsertJournal);
            }
            if ((this.onEndInsertJournalDelegate == null)) {
                this.onEndInsertJournalDelegate = new EndOperationDelegate(this.OnEndInsertJournal);
            }
            if ((this.onInsertJournalCompletedDelegate == null)) {
                this.onInsertJournalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertJournalCompleted);
            }
            base.InvokeAsync(this.onBeginInsertJournalDelegate, new object[] {
                        journal}, this.onEndInsertJournalDelegate, this.onInsertJournalCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp1.JournalServiceReference.IJournalService.BeginSelectJournalByCropId(int crop_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectJournalByCropId(crop_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp1.JournalServiceReference.Journal PhoneApp1.JournalServiceReference.IJournalService.EndSelectJournalByCropId(System.IAsyncResult result) {
            return base.Channel.EndSelectJournalByCropId(result);
        }
        
        private System.IAsyncResult OnBeginSelectJournalByCropId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int crop_id = ((int)(inValues[0]));
            return ((PhoneApp1.JournalServiceReference.IJournalService)(this)).BeginSelectJournalByCropId(crop_id, callback, asyncState);
        }
        
        private object[] OnEndSelectJournalByCropId(System.IAsyncResult result) {
            PhoneApp1.JournalServiceReference.Journal retVal = ((PhoneApp1.JournalServiceReference.IJournalService)(this)).EndSelectJournalByCropId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectJournalByCropIdCompleted(object state) {
            if ((this.SelectJournalByCropIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectJournalByCropIdCompleted(this, new SelectJournalByCropIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectJournalByCropIdAsync(int crop_id) {
            this.SelectJournalByCropIdAsync(crop_id, null);
        }
        
        public void SelectJournalByCropIdAsync(int crop_id, object userState) {
            if ((this.onBeginSelectJournalByCropIdDelegate == null)) {
                this.onBeginSelectJournalByCropIdDelegate = new BeginOperationDelegate(this.OnBeginSelectJournalByCropId);
            }
            if ((this.onEndSelectJournalByCropIdDelegate == null)) {
                this.onEndSelectJournalByCropIdDelegate = new EndOperationDelegate(this.OnEndSelectJournalByCropId);
            }
            if ((this.onSelectJournalByCropIdCompletedDelegate == null)) {
                this.onSelectJournalByCropIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectJournalByCropIdCompleted);
            }
            base.InvokeAsync(this.onBeginSelectJournalByCropIdDelegate, new object[] {
                        crop_id}, this.onEndSelectJournalByCropIdDelegate, this.onSelectJournalByCropIdCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PhoneApp1.JournalServiceReference.IJournalService CreateChannel() {
            return new JournalServiceClientChannel(this);
        }
        
        private class JournalServiceClientChannel : ChannelBase<PhoneApp1.JournalServiceReference.IJournalService>, PhoneApp1.JournalServiceReference.IJournalService {
            
            public JournalServiceClientChannel(System.ServiceModel.ClientBase<PhoneApp1.JournalServiceReference.IJournalService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertJournal(PhoneApp1.JournalServiceReference.Journal journal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = journal;
                System.IAsyncResult _result = base.BeginInvoke("InsertJournal", _args, callback, asyncState);
                return _result;
            }
            
            public int EndInsertJournal(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("InsertJournal", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSelectJournalByCropId(int crop_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = crop_id;
                System.IAsyncResult _result = base.BeginInvoke("SelectJournalByCropId", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp1.JournalServiceReference.Journal EndSelectJournalByCropId(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp1.JournalServiceReference.Journal _result = ((PhoneApp1.JournalServiceReference.Journal)(base.EndInvoke("SelectJournalByCropId", _args, result)));
                return _result;
            }
        }
    }
}
